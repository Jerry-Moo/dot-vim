# why use yaml to manage plugins
# see http://genkisugimoto.com/blog/manage-vim-plugins-via-yaml/
#
# StartUp Plugins
- repo: Shougo/dein.vim
- repo: wsdjeg/dein-ui.vim
  depends: dein.vim

  # 状态栏 需要 nerd font 字体支持
- repo: taigacute/spaceline.vim
- repo: bagrat/vim-buffet
  hook_add: source $VIM_PATH/config/layers/+ui/vim-buffet/config.vim

  # 光标下划线
# - repo: itchyny/vim-cursorword 

  # Code Completions
- repo: neoclide/coc.nvim
  merged: 0 
  rev: release
  hook_add: source $VIM_PATH/config/layers/+completions/coc/config.vim

- repo: honza/vim-snippets
  depends: coc.nvim

# IDE features

- repo: ryanoasis/vim-devicons # icons
  hook_add: let g:webdevicons_enable_denite = 1

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_source: source $VIM_PATH/config/layers/+tools/choosewin/config.vim

- repo: mhinz/vim-startify
  depends: vim-devicons
  hook_add: source $VIM_PATH/config/layers/+ui/startify/config.vim
  hook_post_source: |
      function! StartifyEntryFormat()
        return 'WebDevIconsGetFileTypeSymbol(absolute_path) ." ". entry_path'
      endfunction
  # <Leader>r 快速执行代码 quickrun
- repo: thinca/vim-quickrun   
  on_cmd: QuickRun
  hook_add: |
      let g:quickrun_config = {
          \  "_": {
          \     "outputter": "message",    
          \},
          \}
      let g:quickrun_no_default_key_mappings = 1
  # undo 时光机
- { repo: simnalamburt/vim-mundo, on_map: { n: <Plug> } } 
  # tab
- repo: liuchengxu/vista.vim
  on_cmd: [Vista,Vista!,Vista!!]
  hook_source: source $VIM_PATH/config/layers/+tools/vista/config.vim

- repo: liuchengxu/vim-which-key
  on_cmd: [Whichkey, Whickkey!]
  hook_source: source $VIM_PATH/config/layers/+tools/whichkey/config.vim
  hook_post_source: |
      call which_key#register('<Space>', 'g:which_key_map')
      call which_key#register(';', 'g:which_key_localmap')
      call which_key#register(']', 'g:which_key_rsbgmap')
      call which_key#register('[', 'g:which_key_lsbgmap')


# Git Plugins
  # git magit 合并
- { repo: jreybert/vimagit, on_cmd: Magit} 
  # 异步控制git存储库
- { repo: lambdalisue/gina.vim, on_cmd: Gina } 
  # git 命令
- repo: chemzqm/vim-easygit 
  on_cmd: [Gcd, Glcd, Gcommit, Gblame, Gstatus, Gdiff, Gbrowse, Gpush ]
  hook_source: let g:easygit_enable_command = 1

# File manager
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/layers/+ui/defx/config.vim

- repo: kristijanhusak/defx-git
  on_source: defx.nvim
  hook_source: source  $VIM_PATH/config/layers/+ui/defx/defx-git.vim

- repo: kristijanhusak/defx-icons
  on_source: defx.nvim

# Search 
- repo: junegunn/fzf
  build: './install --all'
  merge: 0

- repo: junegunn/fzf.vim
  depends: fzf
  on_cmd: [Colors,Rg,Buffers]
  on_func: Fzf_dev
  hook_source: source $VIM_PATH/config/layers/+completions/fzf/config.vim

# Fast editing
- { repo: terryma/vim-multiple-cursors }
  # Surround ys添加括号/引号对，ds删除，cs修改
- { repo: tpope/vim-surround }      
  # j/k 快速移动
- { repo: rhysd/accelerated-jk, on_map: { n: <Plug> } }
- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_path: .*
  hook_source: source $VIM_PATH/config/layers/+tools/vim-gutentags/config.vim
  # 更高效的移动 [leader+leader+f,leader+leader+b,lenader+leader+w]
- repo: easymotion/vim-easymotion   
  on_map: { n: <Plug> }
  hook_source: |
        let g:EasyMotion_do_mapping = 0
        let g:EasyMotion_prompt = 'Jump to → '
        let g:EasyMotion_keys = 'fjdkswbeoavn'
        let g:EasyMotion_smartcase = 1
        let g:EasyMotion_use_smartsign_us = 1
  # 更高效的行内移动, f/F/t/T, 才触发
- repo: unblevable/quick-scope          
  hook_add: |
        let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
  # easyalign 快速赋值语句对齐
- repo: junegunn/vim-easy-align      
  on_ft: [vim,json,go,html,js,jsx,py,css,less,tmpl,toml,xml,sql,Dockerfile]
  # mac dash
- repo: rizzatti/dash.vim            
  on_map: { n: <Plug> }
  hook_add: |
      let g:dash_map = {
          \ 'javascript': ['javascript', 'NodeJS'],
          \ 'javascript.jsx': ['react'],
          \ 'html': ['html', 'svg'],
          \ 'go': 'Go',
          \}
  # . 重复操作 支持 vim-surround
- { repo: tpope/vim-repeat , on_map: .* }   

# Language Support

- { repo: honza/dockerfile.vim, on_ft: Dockerfile} # dockerfile syntax support
- repo: scrooloose/nerdcommenter    # 快捷注释
  on_ft: [vim,json,go,html,js,jsx,py,css,less,tmpl,toml,xml,sql,Dockerfile,yaml]
  hook_source: |
    let g:NERDSpaceDelims=1

- { repo: cespare/vim-toml, on_ft: toml }          # toml syntax support
- { repo: vim-scripts/xml.vim, on_ft: xml}         # xml syntax support
- { repo: pearofducks/ansible-vim, on_ft: [ yaml.ansible, ansible_hosts ]}    # yaml syntax support
  # json syntax support
- repo: elzr/vim-json         
  on_ft: json
  hook_add: let g:vim_json_syntax_conceal = 0

- { repo: leafgarland/typescript-vim, on_ft: [typescript.tsx,typescript] } # typescript syntax support
- { repo: peitalin/vim-jsx-typescript, on_ft: [typescript.tsx]} # typescript syntax support

- { repo: Vimjas/vim-python-pep8-indent, on_ft: python }  # python indent support
- { repo: tmhedberg/SimpylFold, on_ft: python }     # python fold support
- repo: vim-python/python-syntax          # python syntax support
  on_ft: python
  hook_add: let g:python_highlight_all = 1

- { repo: neoclide/vim-jsx-improve, on_ft: [javascript,jsx,javascript.jsx]}   # jsx syntax support

- repo: fatih/vim-go
  on_ft: ['go', 'gomod']
  hook_source: source $VIM_PATH/config/layers/+lang/go/config.vim

# Coding

  # echodoc.vim 函数提醒 coc.nvim 本身提供函数提醒功能 btw golang 开启此功能贼卡 带坑
  # - repo: Shougo/echodoc.vim    
  # on_event: CompleteDone
  # hook_source: |
        # call echodoc#enable()
        # let g:echodoc#type = "virtual"

- repo: sbdchd/neoformat
  on_cmd: [Neoformat,Neoformat!]
  hook_source: source  $VIM_PATH/config/layers/+tools/neoformat/config.vim

- repo: Yggdroot/indentLine
  on_ft: [python,html,css,vim,javascript,jsx,javascript.jsx,vue]
  hook_source: source $VIM_PATH/config/layers/+ui/indentline/config.vim

- repo: mattn/emmet-vim
  on_ft: [html,css,jsx,javascript,javascript.jsx]
  on_event: InsertEnter
  hook_add: |
        let g:use_emmet_complete_tag = 0
        let g:user_emmet_install_global = 0
        let g:user_emmet_install_command = 0
        let g:user_emmet_mode = 'i'
        let g:user_emmet_leader_key='<C-g>'
        let g:user_emmet_settings = {
            \  'javascript.jsx' : {
            \      'extends' : 'jsx',
            \  },
        \}

- repo: luochen1990/rainbow
  on_ft: [python,javascript,jsx,javascript.jsx,html,css,go,vim,toml]
  hook_source: source $VIM_PATH/config/layers/+ui/rainbow/config.vim

# Text Object Operator
# 支持自定义文本对象
  #  多光标选中编辑
- { repo: terryma/vim-multiple-cursors }    
- { repo: kana/vim-textobj-user , on_func: textobj#user# }  
# 增加行文本对象: l   dal yal cil
- repo: kana/vim-textobj-line  
  depends: vim-textobj-user
# 增加文件文本对象: e   dae yae cie 
- repo: kana/vim-textobj-entire 
  depends: vim-textobj-user
# 增加缩进文本对象: i   dai yai cii - 相同缩进属于同一块
- repo: kana/vim-textobj-indent 
  depends: vim-textobj-user
