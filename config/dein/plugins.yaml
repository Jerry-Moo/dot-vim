---
# PLUGINS
# ===
# See config/layers/dot-nvim/config.vim for plugin mappings

# StartUp Plugins
- repo: Shougo/dein.vim
- repo: taigacute/spaceline.vim
- repo: ryanoasis/vim-devicons
  hook_add: let g:webdevicons_enable_denite = 1

- repo: thinca/vim-localrc
- repo: romainl/vim-cool
# only use for .editorconfig file
- repo: sgur/vim-editorconfig

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"

- repo: tpope/vim-sleuth
  hook_add: let g:sleuth_neighbor_limit = 5

# GUI only:
- { repo: equalsraf/neovim-gui-shim, if: has('gui_running') }

# Vim8 only:
- { repo: roxma/nvim-yarp, if: "! has('nvim')", depends: vim-hug-neovim-rpc }
- { repo: roxma/vim-hug-neovim-rpc, if: "! has('nvim')" }


# Lazy Loading
# ==========================================

# Languages
# ---------
- { repo: hail2u/vim-css3-syntax, on_ft: css }
- { repo: cakebaker/scss-syntax.vim, on_ft: [ scss, sass ]}
- { repo: groenewege/vim-less, on_ft: less }
- { repo: othree/csscomplete.vim, on_ft: css }
- { repo: mustache/vim-mustache-handlebars, on_ft: [html, mustache, handlebars]}
- { repo: digitaltoad/vim-pug, on_ft: [ pug, jade ]}

- repo: othree/html5.vim
  on_ft: html
  hook_add: |
    let g:html5_event_handler_attributes_complete = 0
    let g:html5_rdfa_attributes_complete = 0
    let g:html5_microdata_attributes_complete = 0
    let g:html5_aria_attributes_complete = 0

# Markdown related
- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: |
    let g:vim_markdown_folding_level = 1
    let g:vim_markdown_folding_style_pythonic = 1
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_auto_insert_bullets = 1
    let g:vim_markdown_new_list_item_indent = 0
    let g:vim_markdown_conceal_code_blocks = 0
    let g:vim_markdown_conceal = 0
    let g:vim_markdown_strikethrough = 1
    let g:vim_markdown_edit_url_in = 'vsplit'
    let g:vim_markdown_fenced_languages = [
      \ 'c++=cpp',
      \ 'viml=vim',
      \ 'bash=sh',
      \ 'ini=dosini',
      \ 'js=javascript',
      \ 'json=javascript',
      \ 'jsx=javascriptreact',
      \ 'tsx=typescriptreact',
      \ 'docker=Dockerfile',
      \ 'makefile=make',
      \ 'py=python'
      \ ]

# Javascript related
- repo: pangloss/vim-javascript
  on_ft: [ javascript, javascriptreact ]
  hook_add: |
    let g:javascript_plugin_jsdoc = 1
    let g:javascript_plugin_flow = 1

- repo: MaxMEllon/vim-jsx-pretty
  on_ft: [ javascript, javascriptreact, typescriptreact ]
  depends: vim-javascript
  hook_add: let g:vim_jsx_pretty_colorful_config = 1

- repo: HerringtonDarkholme/yats.vim
  on_ft: [ typescript, typescriptreact ]

- { repo: heavenshell/vim-jsdoc, on_ft: [ javascript, javascriptreact ] }
- { repo: jparise/vim-graphql, on_ft: [ javascript, javascriptreact ] }
- { repo: moll/vim-node, on_ft: [ javascript, javascriptreact ] }
- repo: posva/vim-vue
  on_ft: vue
  hook_source: source $VIM_PATH/config/layers/+lang/vue/config.vim

# json related
- repo: elzr/vim-json
  on_ft: json
  hook_add: let g:vim_json_syntax_conceal = 0

# Golang related
- repo: fatih/vim-go
  on_ft: go
  hook_source: source $VIM_PATH/config/layers/+lang/go/config.vim

# Python related
- repo: vim-python/python-syntax          # python syntax support
  on_ft: python
  hook_add: let g:python_highlight_all = 1
- { repo: Vimjas/vim-python-pep8-indent, on_ft: python }  # python indent support
- { repo: tmhedberg/SimpylFold, on_ft: python }     # python fold support
- { repo: raimon49/requirements.txt.vim, on_ft: requirements }
- { repo: vim-scripts/python_match.vim, on_ft: python }

# Misc
- { repo: StanAngeloff/php.vim, on_ft: php }
- { repo: tbastos/vim-lua, on_ft: lua }
- { repo: vim-ruby/vim-ruby, on_ft: ruby }
- { repo: keith/swift.vim, on_ft: swift }
- { repo: rust-lang/rust.vim, on_ft: rust }
- { repo: vim-jp/syntax-vim-ex, on_ft: vim }
- { repo: chrisbra/csv.vim, on_ft: csv }
- { repo: tpope/vim-git, on_ft: [ gitcommit, gitrebase, gitconfig ]}
- { repo: ekalinin/Dockerfile.vim, on_ft: [ Dockerfile, docker-compose ]}
- { repo: tmux-plugins/vim-tmux, on_ft: tmux }
- { repo: MTDL9/vim-log-highlighting, on_ft: log }
- { repo: cespare/vim-toml, on_ft: toml }
- { repo: mboughaba/i3config.vim, on_ft: i3config }
- { repo: dag/vim-fish, on_ft: fish }
- { repo: jstrater/mpvim, on_ft: portfile }
- { repo: robbles/logstash.vim, on_ft: logstash }
- { repo: lifepillar/pgsql.vim, on_ft: pgsql }
- { repo: chr4/nginx.vim, on_ft: nginx }
- { repo: IN3D/vim-raml, on_ft: raml }
- { repo: vim-scripts/xml.vim, on_ft: xml}         # xml syntax support
- repo: pearofducks/ansible-vim
  on_ft: [ ansible, ansible_hosts, jinja2 ]
  hook_add: |
    let g:ansible_extra_keywords_highlight = 1
    let g:ansible_template_syntaxes = {
      \   '*.json.j2': 'json',
      \   '*.(ba)?sh.j2': 'sh',
      \   '*.ya?ml.j2': 'yaml',
      \   '*.xml.j2': 'xml',
      \   '*.conf.j2': 'conf',
      \   '*.ini.j2': 'ini'
      \ }
- repo: hashivim/vim-terraform
  on_ft: terraform
  on_cmd: [ Terraform, TerraformFmt ]
  hook_add: let g:terraform_fmt_on_save = 1

# ==========================================
# Commands
# --------
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/config/layers/+ui/defx/config.vim
- repo: kristijanhusak/defx-git
  on_source: defx.nvim
  hook_source: source  $VIM_PATH/config/layers/+ui/defx/defx-git.vim
- repo: kristijanhusak/defx-icons
  on_source: defx.nvim
  hook_source: source  $VIM_PATH/config/layers/+ui/defx/defx-icons.vim

- repo: mhinz/vim-startify
  depends: vim-devicons
  hook_add: source  $VIM_PATH/config/layers/+ui/startify/config.vim
  hook_post_source: |
      function! StartifyEntryFormat()
        return 'WebDevIconsGetFileTypeSymbol(absolute_path) ." ". entry_path'
      endfunction

- repo: liuchengxu/vim-which-key
  on_cmd: [Whichkey, Whichkey!]
  hook_source: source $VIM_PATH/config/layers/+tools/whichkey/config.vim
  hook_post_source: |
      call which_key#register('<Space>', 'g:which_key_map')
      call which_key#register(';', 'g:which_key_localmap')
      call which_key#register(']', 'g:which_key_rsbgmap')
      call which_key#register('[', 'g:which_key_lsbgmap')

- { repo: mbbill/undotree, on_cmd: UndotreeToggle }
- { repo: brooth/far.vim, on_cmd: [ Far, Farp, F ] }

- repo: liuchengxu/vista.vim
  on_cmd: [Vista,Vista!,Vista!!]
  hook_source: source $VIM_PATH/config/layers/+tools/vista/config.vim

- repo: junegunn/fzf
  build: './install --all'
  merge: 0
- repo: junegunn/fzf.vim
  depends: fzf
  on_cmd: [Colors,Rg,Buffers]
  on_func: Fzf_dev
  hook_source: source $VIM_PATH/config/layers/+completions/fzf/config.vim

- repo: thinca/vim-quickrun
  on_cmd: QuickRun
  hook_add: |
      let g:quickrun_config = {
          \  "_": {
          \     "outputter": "message",
          \},
          \}
      let g:quickrun_no_default_key_mappings = 1

# Git Plugins
  # git magit 合并
- { repo: jreybert/vimagit, on_cmd: Magit}
  # 异步控制git存储库
- { repo: lambdalisue/gina.vim, on_cmd: Gina }
  # git 命令
- repo: chemzqm/vim-easygit
  on_cmd: [Gcd, Glcd, Gcommit, Gblame, Gstatus, Gdiff, Gbrowse, Gpush ]
  hook_source: let g:easygit_enable_command = 1

- { repo: guns/xterm-color-table.vim, on_cmd: XtermColorTable }
- { repo: cocopon/colorswatch.vim, on_cmd: ColorSwatchGenerate }


# ==========================================
# Interface
# ---------
- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_add: source $VIM_PATH/config/layers/+tools/choosewin/config.vim

- { repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> }}
# j/k 快速移动
- { repo: rhysd/accelerated-jk, on_map: { n: <Plug> } }
- { repo: t9md/vim-quickhl, on_map: { nv: <Plug> }}

- repo: itchyny/vim-cursorword
  on_path: .*
  hook_source: |
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType denite,qf,easygitblame let b:cursorword = 0
      autocmd WinEnter * if &diff | let b:cursorword = 0 | endif
      autocmd InsertEnter * let b:cursorword = 0
      autocmd InsertLeave * let b:cursorword = 1
    augroup END

- repo: norcalli/nvim-colorizer.lua
  if: has('nvim') && has('nvim-0.4.0')
  on_path: .*
  hook_source: luafile $VIM_PATH/config/layers/+ui/nvim-colorizer/colorizer.lua
  # Surround ys添加括号/引号对，ds删除，cs修改
- { repo: tpope/vim-surround }
  # 更高效的移动 [leader+leader+f,leader+leader+b,lenader+leader+w]
- repo: easymotion/vim-easymotion
  on_map: { n: <Plug> }
  hook_source: |
        let g:EasyMotion_do_mapping = 0
        let g:EasyMotion_prompt = 'Jump to → '
        let g:EasyMotion_keys = 'fjdkswbeoavn'
        let g:EasyMotion_smartcase = 1
        let g:EasyMotion_use_smartsign_us = 1
  # 更高效的行内移动, f/F/t/T, 才触发
- repo: unblevable/quick-scope
  hook_add: |
        let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
  # easyalign 快速赋值语句对齐
- repo: junegunn/vim-easy-align
  on_ft: [vim, json, go, html, js, jsx, c, py, css, less, tmpl, toml, xml, sql, Dockerfile, vue]
  # mac dash
- repo: rizzatti/dash.vim
  on_map: { n: <Plug> }
  hook_add: |
      let g:dash_map = {
          \ 'javascript': ['javascript', 'NodeJS'],
          \ 'javascript.jsx': ['react'],
          \ 'html': ['html', 'svg'],
          \ 'go': 'Go',
          \}
  # . 重复操作 支持 vim-surround
- { repo: tpope/vim-repeat , on_map: .* }

# ==========================================
# Completion
- repo: neoclide/coc.nvim
  merge: 0
  rev: release
  hook_add: source  $VIM_PATH/config/layers/+completions/coc/config.vim
- repo: honza/vim-snippets
  depends : coc.nvim

- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_path: .*
  hook_source: source $VIM_PATH/config/layers/+tools/vim-gutentags/config.vim

# echodoc.vim 函数提醒 coc.nvim 本身提供函数提醒功能 btw golang 开启此功能贼卡 带坑
- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_source: |
         call echodoc#enable()
         let g:echodoc#type = "virtual"
- { repo: tyru/caw.vim, on_map: { nx: <Plug> }}

  # neoformat 格式化文件
- repo: sbdchd/neoformat
  on_cmd: [Neoformat,Neoformat!]
  hook_source: source  $VIM_PATH/config/layers/+tools/neoformat/config.vim

- repo: Yggdroot/indentLine
  on_ft: [python,html,css,vim,javascript,javascriptreact,vue]
  hook_source: source $VIM_PATH/config/layers/+ui/indentline/config.vim

- repo: mattn/emmet-vim
  on_ft: [ html, css, javascript, javascriptreact ]
  on_event: InsertEnter
  hook_add: |
        let g:use_emmet_complete_tag = 0
        let g:user_emmet_install_global = 0
        let g:user_emmet_install_command = 0
        let g:user_emmet_mode = 'i'
        let g:user_emmet_leader_key='<C-g>'
        let g:user_emmet_settings = {
            \  'javascript.jsx' : {
            \      'extends' : 'jsx',
            \  },
        \}
- repo: luochen1990/rainbow
  on_ft: [python,javascript,javascriptreact,html,css,go,vim,toml]
  hook_source: source $VIM_PATH/config/layers/+ui/rainbow/config.vim


# ==========================================
# Text objects
# ------------
 #  多光标选中编辑
- { repo: terryma/vim-multiple-cursors }
- { repo: kana/vim-textobj-user , on_func: textobj#user# }
# 增加行文本对象: l   dal yal cil
- repo: kana/vim-textobj-line
  depends: vim-textobj-user
# 增加文件文本对象: e   dae yae cie
- repo: kana/vim-textobj-entire
  depends: vim-textobj-user
# 增加缩进文本对象: i   dai yai cii - 相同缩进属于同一块
- repo: kana/vim-textobj-indent
  depends: vim-textobj-user

